name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Dep
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            target/
          key: ${{runner.os}}-cargo-${{hashFiles('**/Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-

      - name: Install the Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      
      - name: Build and test code
        env:
          APP_CLERK_KEY: ${{ secrets.APP_CLERK_KEY }}
        run: |
          cargo build --verbose

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker images
        uses: docker/bake-action@v6
        env:
          APP_CLERK_KEY: ${{ secrets.APP_CLERK_KEY }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        with:
          push: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.secrets=id=clerk,env=APP_CLERK_KEY
            
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Log in to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Install sshpass
        run: sudo apt-get install sshpass
    
      - name: Copy docker-compose.yml to droplet
        run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ vars.DROPLET_IP }}:~ && 
         sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no -r ./migrations root@${{ vars.DROPLET_IP }}:~
        
      
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DROPLET_IP }}
          username: root
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            cd ~
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            export APP_CLERK_KEY=${{ secrets.APP_CLERK_KEY }}
            docker-compose down
            docker-compose pull
            docker-compose up -d
        

    